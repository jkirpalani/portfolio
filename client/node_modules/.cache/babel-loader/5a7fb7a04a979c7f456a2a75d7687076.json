{"ast":null,"code":"import _slicedToArray from \"/Users/johnnys-mac/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/johnnys-mac/Documents/projects/portfolio/src/components/contact/Contact.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport { motion } from 'framer-motion';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport contactImage1 from '../../assets/images/heic1808a.jpg';\nimport './contact.styles.css';\n\nconst Contact = props => {\n  const _useState = useState({\n    name: '',\n    email: '',\n    message: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formState = _useState2[0],\n        setFormState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isVisible = _useState4[0],\n        setIsVisible = _useState4[1];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setFormState({\n      name: '',\n      email: '',\n      message: ''\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setFormState({\n      [name]: value\n    });\n  };\n\n  const contactRef = React.useRef();\n  const variants = {\n    open: {\n      opacity: 1\n    },\n    closed: {\n      opacity: 0\n    }\n  };\n  React.useEffect(() => {\n    const contactObserverOptions = {\n      threshold: 0.5 // rootMargin: '-1000px 0px 0px 0px',\n\n    };\n    const contactObserver = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) {\n        setIsVisible(false);\n        console.log('intersecting', contactRef.current);\n      } else {\n        setIsVisible(true);\n        console.log('intersecting', contactRef.current);\n      }\n    }, contactObserverOptions);\n    contactObserver.observe(contactRef.current);\n    return () => contactObserver.disconnect(); // cleanup\n  }, []);\n  return React.createElement(motion.div, {\n    animate: isVisible ? 'open' : 'closed',\n    variants: variants,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contact contact-image\",\n    style: {\n      backgroundImage: `url(${contactImage1})`\n    },\n    ref: contactRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: \"paper-plane\",\n    className: \"option-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), \"LET'S CONNECT\"), React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"name\",\n    type: \"email\",\n    value: formState.name,\n    handleChange: handleChange,\n    label: \"Your Name\",\n    className: \"form-input\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: formState.email,\n    handleChange: handleChange,\n    label: \"Your Email Address\",\n    className: \"form-input\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"message\",\n    type: \"text\",\n    value: formState.message,\n    handleChange: handleChange,\n    label: \"Your Message\",\n    className: \"form-input form-input-message\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Submit\")))))));\n};\n\nexport default Contact;","map":{"version":3,"sources":["/Users/johnnys-mac/Documents/projects/portfolio/src/components/contact/Contact.jsx"],"names":["React","useState","FormInput","CustomButton","motion","FontAwesomeIcon","contactImage1","Contact","props","name","email","message","formState","setFormState","isVisible","setIsVisible","handleSubmit","event","preventDefault","handleChange","target","value","contactRef","useRef","variants","open","opacity","closed","useEffect","contactObserverOptions","threshold","contactObserver","IntersectionObserver","entries","observer","isIntersecting","console","log","current","observe","disconnect","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport { motion } from 'framer-motion';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport contactImage1 from '../../assets/images/heic1808a.jpg';\nimport './contact.styles.css';\n\nconst Contact = props => {\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    message: '',\n  });\n\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setFormState({ name: '', email: '', message: '' });\n  };\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n    setFormState({ [name]: value });\n  };\n\n  const contactRef = React.useRef();\n  const variants = {\n    open: {\n      opacity: 1,\n    },\n    closed: { opacity: 0 },\n  };\n\n  React.useEffect(() => {\n    const contactObserverOptions = {\n      threshold: 0.5,\n      // rootMargin: '-1000px 0px 0px 0px',\n    };\n\n    const contactObserver = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) {\n        setIsVisible(false);\n        console.log('intersecting', contactRef.current);\n      } else {\n        setIsVisible(true);\n        console.log('intersecting', contactRef.current);\n      }\n    }, contactObserverOptions);\n\n    contactObserver.observe(contactRef.current);\n    return () => contactObserver.disconnect(); // cleanup\n  }, []);\n\n  return (\n    <motion.div animate={isVisible ? 'open' : 'closed'} variants={variants}>\n      <div\n        className=\"contact contact-image\"\n        style={{ backgroundImage: `url(${contactImage1})` }}\n        ref={contactRef}\n      >\n        <div className=\"form-box\">\n          <h2>\n            <FontAwesomeIcon icon=\"paper-plane\" className=\"option-icon\" />\n            LET'S CONNECT\n          </h2>\n          <div className=\"form-container\">\n            <form onSubmit={handleSubmit} className=\"form-inline\">\n              <FormInput\n                name=\"name\"\n                type=\"email\"\n                value={formState.name}\n                handleChange={handleChange}\n                label=\"Your Name\"\n                className=\"form-input\"\n                required\n              />\n              <FormInput\n                name=\"email\"\n                type=\"email\"\n                value={formState.email}\n                handleChange={handleChange}\n                label=\"Your Email Address\"\n                className=\"form-input\"\n                required\n              />\n              <FormInput\n                name=\"message\"\n                type=\"text\"\n                value={formState.message}\n                handleChange={handleChange}\n                label=\"Your Message\"\n                className=\"form-input form-input-message\"\n                required\n              />\n              <CustomButton type=\"submit\">\n                <span>Submit</span>\n              </CustomButton>\n            </form>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}