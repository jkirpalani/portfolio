{"ast":null,"code":"import _slicedToArray from \"/Users/johnnys-mac/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/johnnys-mac/Documents/projects/portfolio/src/App.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Main from './pages/Main'; // import Header from './components/header/Header';\n\nconst App = () => {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        isAppearing = _React$useState2[0],\n        setIsAppearing = _React$useState2[1];\n\n  const elementToObserveRef = React.useRef();\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        console.log(entries[0]);\n        setIsAppearing(true);\n      } else {\n        console.log('NOT intersecting');\n        setIsAppearing(false);\n      }\n    });\n    observer.observe(elementToObserveRef.current);\n    return () => observer.disconnect(); // cleanup\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Main, {\n    ref: elementToObserveRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/johnnys-mac/Documents/projects/portfolio/src/App.js"],"names":["React","Route","Main","App","useState","isAppearing","setIsAppearing","elementToObserveRef","useRef","useEffect","observer","IntersectionObserver","entries","isIntersecting","console","log","observe","current","disconnect"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB,C,CACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,0BACsBH,KAAK,CAACI,QAAN,CAAe,KAAf,CADtB;AAAA;AAAA,QACTC,WADS;AAAA,QACIC,cADJ;;AAEhB,QAAMC,mBAAmB,GAAGP,KAAK,CAACQ,MAAN,EAA5B;AAEAR,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,UAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBC,OAAO,IAAI;AACnD,UAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAf,EAA+B;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAAC,CAAD,CAAnB;AACAN,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD,OAHD,MAGO;AACLQ,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAT,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,KARgB,CAAjB;AASAI,IAAAA,QAAQ,CAACM,OAAT,CAAiBT,mBAAmB,CAACU,OAArC;AACA,WAAO,MAAMP,QAAQ,CAACQ,UAAT,EAAb,CAXoB,CAWgB;AACrC,GAZD,EAYG,EAZH;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEX,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAQD,CA1BD;;AA4BA,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Main from './pages/Main';\n// import Header from './components/header/Header';\n\nconst App = () => {\n  const [isAppearing, setIsAppearing] = React.useState(false);\n  const elementToObserveRef = React.useRef();\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        console.log(entries[0]);\n        setIsAppearing(true);\n      } else {\n        console.log('NOT intersecting');\n        setIsAppearing(false);\n      }\n    });\n    observer.observe(elementToObserveRef.current);\n    return () => observer.disconnect(); // cleanup\n  }, []);\n\n  return (\n    <div>\n      {/* <Header />\n      <div className=\"section1\"></div> */}\n      <Main ref={elementToObserveRef} />\n      {/* <Route exact path=\"/\" component={Main} /> */}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}